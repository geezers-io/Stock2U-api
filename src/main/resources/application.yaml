server:
  port: 8081
  tomcat:
    uri-encoding: UTF-8
  servlet:
    session:
      cookie:
        path: /
        name: JSESSIONID
        http-only: true
      timeout: 3600

spring:
  profiles:
    group:
      local:
        - db-local
      dev:
        - db-local
      prod:
        - db-prod
    active:
      - local
  config:
    import: externel.yaml
  security:
    oauth2:
      client:
        regitstration:
          kakao:
            client-id: ${KAKAO_REST_API}
            client-name: Kakao
            client-secret: ${KAKAO_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            scope: account_email
            redirect-uri: http://localhost:8081/login/oauth2/code/kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /docs


logging:
  level:
    org.springframework.boot.autoconfigure: ERROR
    org.springframework.data.convert: ERROR
    org.hibernate: INFO
    org.springframework.beans.factory.support: INFO
    com.zaxxer.hikari: INFO
    io.netty: INFO
    org.springframework.context.annotation: INFO


# local 환경
---
spring:
  config:
    activate:
      on-profile: "local"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      jdbc-url: ${HOME_JDBC_URL}
      username: ${HOME_MARIADB_USERNAME}
      password: ${HOME_MARIADB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
  data:
    mongodb:
      uri: ${HOME_MONGO_URI}
      database: "stock2u"
      host: ${HOME_MONGO_HOST}
      port: 27017
      password: ${HOME_MONGO_PASSWORD}
      username: ${HOME_MONGO_USERNAME}
  redis:
    host: ${HOME_REDIS_HOST}
    port: 6379
  session:
    store-type: redis
    redis:
      namespace: stock2u:session

# dev 환경
---
spring:
  config:
    activate:
      on-profile: "dev"
  session:
    store-type: redis
    redis:
      namespace: stock2u:session
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      jdbc-url: ${HOME_JDBC_URL}
      username: ${HOME_MARIADB_USERNAME}
      password: ${HOME_MARIADB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
  data:
    mongodb:
      uri: ${HOME_MONGO_URI}
      database: "stock2u"
      port: 27017
      password: ${HOME_MONGO_PASSWORD}
      username: ${HOME_MONGO_USERNAME}
  redis:
    host: ${HOME_REDIS_HOST}
    port: 6379

---

# prod 환경
spring:
  config:
    activate:
      on-profile: "prod"
  session:
    store-type: redis
    redis:
      namespace: stock2u:session
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      jdbc-url: ${HOME_JDBC_URL}
      username: ${HOME_MARIADB_USERNAME}
      password: ${HOME_MARIADB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
  data:
    mongodb:
      uri: ${HOME_MONGO_URI}
      database: "stock2u"
      host: ${HOME_MONGO_HOST}
      port: 27017
      password: ${HOME_MONGO_PASSWORD}
      username: ${HOME_MONGO_USERNAME}
  redis:
    host: ${HOME_REDIS_HOST}
    port: 6379
